import FormService from '../services/FormService.civet'
import type { Form, CreateForm } from '../types/form.type.civet'
import type { AxiosError } from 'axios'

type Error = Partial<Record<keyof CreateForm, string>>

initialState := (): CreateForm =>
	{ name: '', email: '', age: 0 }

function App()
  [state, setState] := useState initialState()
  [errors, setErrors] := useState<Error> {}
  navigate := useNavigate()

  function onSubmit (e: React.FormEvent)
			e.preventDefault()
			try
				await FormService.send state;
				setState initialState()
				setErrors {}

        navigate("/")
			catch err
				if errors := (err as AxiosError<{ errors?: Error }>).response?.data.errors
					setErrors errors;

  onChange := (e: React.ChangeEvent<HTMLInputElement>) =>
    {id, value, valueAsNumber} := e.target

    setState (state) => 
      {...state, [id]: valueAsNumber || value}

  <div className={"flex justify-center items-center h-full"}>
    <form onSubmit={onSubmit} className={"space-y-2 bg-white p-3 rounded-lg border"}>
      <Field label={'Name'} error={errors['name']}>
        <Input #name value={state.name} onChange={onChange}>
      <Field label={'E-mail'} error={errors['email']}>
        <Input #email value={state.email} type={'email'} onChange={onChange}>
      <Field label={'Age'} error={errors['age']}>
        <Input #age type={"number"} value={state.age} onChange={onChange}>
      
      <div className={"text-center"}>
        <Button type={"submit"}>
          Enviar

export default App
